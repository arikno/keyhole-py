database,collection,namespace,index_name,key_string,fields,unique,sparse,background,ttl,is_shard_key,is_duplicate,total_ops,issues,recommendation
sample_restaurants,restaurants,sample_restaurants.restaurants,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
sample_restaurants,neighborhoods,sample_restaurants.neighborhoods,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
sample_weatherdata,data,sample_weatherdata.data,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
sample_airbnb,listingsAndReviews,sample_airbnb.listingsAndReviews,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
sample_airbnb,listingsAndReviews,sample_airbnb.listingsAndReviews,address.location_2dsphere,{address.location: 2dsphere},address.location,False,False,True,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Consider dropping unused indexes to improve write performance
sample_airbnb,listingsAndReviews,sample_airbnb.listingsAndReviews,first_review_1,{first_review: 1},first_review,False,False,False,568036800,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Consider dropping unused indexes to improve write performance
sample_airbnb,listingsAndReviews,sample_airbnb.listingsAndReviews,name_1,{name: 1},name,False,False,True,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Consider dropping unused indexes to improve write performance
sample_airbnb,listingsAndReviews,sample_airbnb.listingsAndReviews,property_type_1_room_type_1_beds_1__id_1,"{property_type: 1, room_type: 1, beds: 1, _id: 1}","property_type, room_type, beds, _id",False,False,False,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Compound index - ensure optimal field ordering (equality before range); Consider dropping unused indexes to improve write performance; Compound index - ensure optimal field ordering (equality before range)
sample_airbnb,listingsAndReviews,sample_airbnb.listingsAndReviews,property_type_1_room_type_1_beds_1,"{property_type: 1, room_type: 1, beds: 1}","property_type, room_type, beds",False,False,True,0,False,True,0,Unused index; Redundant prefix of compound index property_type_1_room_type_1_beds_1__id_1,Consider dropping this index - property_type_1_room_type_1_beds_1__id_1 can serve the same queries; Consider dropping unused indexes to improve write performance; Compound index - ensure optimal field ordering (equality before range)
sample_airbnb,listingsAndReviews,sample_airbnb.listingsAndReviews,property_type_-1,{property_type: -1},property_type,False,False,False,0,False,True,0,Unused index; Redundant prefix of compound index property_type_1_room_type_1_beds_1__id_1; Redundant prefix of compound index property_type_1_room_type_1_beds_1,Consider dropping this index - property_type_1_room_type_1_beds_1 can serve the same queries; Consider dropping unused indexes to improve write performance
sample_airbnb,listingsAndReviews,sample_airbnb.listingsAndReviews,reviews.date_1_property_type_1_room_type_1_beds_1,"{reviews.date: 1, property_type: 1, room_type: 1, beds: 1}","reviews.date, property_type, room_type, beds",False,False,False,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Compound index - ensure optimal field ordering (equality before range); Consider dropping unused indexes to improve write performance; Compound index - ensure optimal field ordering (equality before range)
test,field_count,test.field_count,_id_,{_id: 1},_id,False,False,False,0,False,False,4,,No issues detected
test,sl_log_20251008,test.sl_log_20251008,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
test,rrr,test.rrr,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
mongomart,invoices_big,mongomart.invoices_big,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
mongomart,invoices_big_collection,mongomart.invoices_big_collection,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
mongomart,invoices,mongomart.invoices,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
mongomart,addresses,mongomart.addresses,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
mongomart,items,mongomart.items,description_text,"{_fts: text, _ftsx: 1}","_fts, _ftsx",False,False,False,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Compound index - ensure optimal field ordering (equality before range); Text index detected - monitor performance for text search queries; Consider dropping unused indexes to improve write performance; Compound index - ensure optimal field ordering (equality before range); Text index detected - monitor performance for text search queries
mongomart,items,mongomart.items,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
mongomart,items,mongomart.items,title_1_stars_1_category_1_price_1,"{title: 1.0, stars: 1.0, category: 1.0, price: 1.0}","title, stars, category, price",False,False,False,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Compound index - ensure optimal field ordering (equality before range); Consider dropping unused indexes to improve write performance; Compound index - ensure optimal field ordering (equality before range)
mongomart,zips,mongomart.zips,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
mongomart,store,mongomart.store,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
mongomart,store,mongomart.store,city_1,{city: 1.0},city,False,False,False,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Consider dropping unused indexes to improve write performance
mongomart,store,mongomart.store,coords_2dsphere,{coords: 2dsphere},coords,False,False,False,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Consider dropping unused indexes to improve write performance
mongomart,store,mongomart.store,storeId_1,{storeId: 1.0},storeId,True,False,False,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Consider dropping unused indexes to improve write performance
mongomart,store,mongomart.store,zip_1,{zip: 1.0},zip,False,False,False,0,False,False,0,Unused index,Consider dropping unused indexes to improve write performance; Consider dropping unused indexes to improve write performance
mongomart,stores,mongomart.stores,_id_,{_id: 1},_id,False,False,False,0,False,False,2,,No issues detected
